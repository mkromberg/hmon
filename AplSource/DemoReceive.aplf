 DemoReceive arg;UID;Facts;data;TS;event;ts;cid;wsused;cpuused;compactions;ai;ws;line;fn;code;txt;threadcount
 ⍝ Receive all types of callbacks
 (event data)←arg
 ts←1 ⎕DT'J'
 cid←2 1⊃⎕VFI UID←data.UID
 :If (≢demodata)≠≢conns
     demodata←(demodata[;1]∊conns[;1])⌿demodata
  :EndIf

 :Select event

 :Case 'Notification'
     ⎕←UID,,' Notification: ',data.Event.Name

 :Case 'Facts'
     ⎕←⎕JSON data
     (ws ai threadcount)←data.(Facts[Facts.Name⍳'Workspace' 'AccountInformation' 'ThreadCount'].Value)
     (wsused compactions)←ws.(Used Compactions)
     cpuused←ai.ComputeTime
     ⎕←⎕JSON threadcount
     DemoUpdate cid('ts' 'wsused' 'cpuused' 'compactions' 'threads' 'suspended')(ts wsused cpuused compactions,threadcount.(Total Suspended))
 ⍝   'DemoReceive' 2000 GetLastKnownState cid ⍝ Request last known state

 :Case 'LastKnownState'
     :If 0≠data.⎕NC'Activity'
         (code fn line)←data.(Activity.code,Location.(Function Line))
         txt←(⍕code),': ',fn,'[',(⍕line),']'
         DemoUpdate cid('ts' 'laststate')(ts txt)
     :EndIf

 :Else
     ⎕←event (⎕JSON data)
     ⍝ We do nothing right now
 :EndSelect
